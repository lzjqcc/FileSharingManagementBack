function BitMatrixParser(bitMatrix){var dimension=bitMatrix.Dimension;if(dimension<21||(dimension&3)!=1){throw"Error BitMatrixParser"}this.bitMatrix=bitMatrix;this.parsedVersion=null;this.parsedFormatInfo=null;this.copyBit=function(i,j,versionBits){return this.bitMatrix.get_Renamed(i,j)?(versionBits<<1)|1:versionBits<<1};this.readFormatInformation=function(){if(this.parsedFormatInfo!=null){return this.parsedFormatInfo}var formatInfoBits=0;for(var i=0;i<6;i++){formatInfoBits=this.copyBit(i,8,formatInfoBits)}formatInfoBits=this.copyBit(7,8,formatInfoBits);formatInfoBits=this.copyBit(8,8,formatInfoBits);formatInfoBits=this.copyBit(8,7,formatInfoBits);for(var j=5;j>=0;j--){formatInfoBits=this.copyBit(8,j,formatInfoBits)}this.parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits);if(this.parsedFormatInfo!=null){return this.parsedFormatInfo}var dimension=this.bitMatrix.Dimension;formatInfoBits=0;var iMin=dimension-8;for(var i=dimension-1;i>=iMin;i--){formatInfoBits=this.copyBit(i,8,formatInfoBits)}for(var j=dimension-7;j<dimension;j++){formatInfoBits=this.copyBit(8,j,formatInfoBits)}this.parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits);if(this.parsedFormatInfo!=null){return this.parsedFormatInfo}throw"Error readFormatInformation"};this.readVersion=function(){if(this.parsedVersion!=null){return this.parsedVersion}var dimension=this.bitMatrix.Dimension;var provisionalVersion=(dimension-17)>>2;if(provisionalVersion<=6){return Version.getVersionForNumber(provisionalVersion)}var versionBits=0;var ijMin=dimension-11;for(var j=5;j>=0;j--){for(var i=dimension-9;i>=ijMin;i--){versionBits=this.copyBit(i,j,versionBits)}}this.parsedVersion=Version.decodeVersionInformation(versionBits);if(this.parsedVersion!=null&&this.parsedVersion.DimensionForVersion==dimension){return this.parsedVersion}versionBits=0;for(var i=5;i>=0;i--){for(var j=dimension-9;j>=ijMin;j--){versionBits=this.copyBit(i,j,versionBits)}}this.parsedVersion=Version.decodeVersionInformation(versionBits);if(this.parsedVersion!=null&&this.parsedVersion.DimensionForVersion==dimension){return this.parsedVersion}throw"Error readVersion"};this.readCodewords=function(){var formatInfo=this.readFormatInformation();var version=this.readVersion();var dataMask=DataMask.forReference(formatInfo.DataMask);var dimension=this.bitMatrix.Dimension;dataMask.unmaskBitMatrix(this.bitMatrix,dimension);var functionPattern=version.buildFunctionPattern();var readingUp=true;var result=new Array(version.TotalCodewords);var resultOffset=0;var currentByte=0;var bitsRead=0;for(var j=dimension-1;j>0;j-=2){if(j==6){j--}for(var count=0;count<dimension;count++){var i=readingUp?dimension-1-count:count;for(var col=0;col<2;col++){if(!functionPattern.get_Renamed(j-col,i)){bitsRead++;currentByte<<=1;if(this.bitMatrix.get_Renamed(j-col,i)){currentByte|=1}if(bitsRead==8){result[resultOffset++]=currentByte;bitsRead=0;currentByte=0}}}}readingUp^=true}if(resultOffset!=version.TotalCodewords){throw"Error readCodewords"}return result}};